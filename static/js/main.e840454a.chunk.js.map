{"version":3,"sources":["quote/logo.jpg","quote/Quote.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","$","document","ready","click","ajax","url","dataType","data","success","response","html","quoteText","quoteAuthor","attr","Quote","react_default","a","createElement","className","title","tilt_default","options","max","style","height","width","paddingTop","src","Logo","alt","href","id","React","Component","particlesOptions","particles","number","value","density","enable","size","random","anim","speed","size_min","line_linked","move","direction","out_mode","interactivity","events","onhover","mode","onclick","modes","bubble","distance","duration","opacity","repulse","App","particles_default","params","src_quote_Quote","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"qGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0RCkBxCC,IAAEC,UAAUC,MAAM,WAChBF,IAAE,UAAUG,MAAM,WAbpBH,IAAEI,KAAK,CACDC,IAAK,uCACLC,SAAU,QACVC,KAAM,+CACNC,QAAS,SAAUC,GACjBT,IAAE,iBAAiBU,KAAK,qDACtBD,EAASE,UAAY,eAAiBF,EAASG,YAAc,eAC/DZ,IAAE,UAAUa,KAAK,OAAQ,oCAAsCJ,EAASE,UACtE,KAAOF,EAASG,YAAc,gBAmEzBE,mLArDd,OAECC,EAAAC,EAAAC,cAAA,WAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mCAAoCC,MAAM,QAErDJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAME,UAAU,oBAAoBG,QAAS,CAAEC,IAAM,IAAMC,MAAO,CAAEC,OAAQ,IAAKC,MAAO,MACpFV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACnBH,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACG,WAAY,OAAQC,IAAKC,IAAMV,UAAU,UAAUW,IAAI,SACpEd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,WAMFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6CAA6CC,MAAM,SAAhE,0BACAJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kCAAkCY,KAAK,+CAA+CX,MAAM,WAAzG,eAIFJ,EAAAC,EAAAC,cAAA,WAASC,UAAU,sEACfH,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAME,UAAU,qBAEhBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iDAAd,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAEbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sCAAuCa,GAAG,gBAAvD,0CAMRhB,EAAAC,EAAAC,cAAA,WAASC,UAAU,gCACjBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8DAAlB,uBAxCgBc,IAAMC,4BCjBpBC,SAAmB,CACvBC,UAAa,CACLC,OAAU,CACNC,MAAS,KACTC,QAAW,CACPC,QAAU,IAGlBC,KAAQ,CACJH,MAAS,EACTI,QAAU,EACVC,KAAQ,CACJC,MAAS,EACTC,SAAY,KAGpBC,YAAe,CACXN,QAAU,GAEdO,KAAQ,CACJL,QAAU,EACVE,MAAS,EACTI,UAAa,MACbC,SAAY,QAGpBC,cAAiB,CACbC,OAAU,CACNC,QAAW,CACPZ,QAAU,EACVa,KAAQ,UAEZC,QAAW,CACPd,QAAU,EACVa,KAAQ,YAGhBE,MAAS,CACLC,OAAU,CACNC,SAAY,IACZC,SAAY,EACZjB,KAAQ,EACRkB,QAAW,GAEfC,QAAW,CACPH,SAAY,IACZC,SAAY,OA0BfG,mLAfX,OACE7C,EAAAC,EAAAC,cAAA,WAKOF,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAWE,UAAU,YACrB4C,OAAQ5B,IACfnB,EAAAC,EAAAC,cAAC8C,EAAD,cAVY9B,mBClDE+B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAOvD,EAAAC,EAAAC,cAACsD,EAAD,MAAStE,SAASuE,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcxE,MAAMyE,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e840454a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ec83f77b.jpg\";","import React from \"react\";\r\nimport './Quote.css';\r\nimport Tilt from 'react-tilt';\r\nimport Logo from './logo.jpg';\r\nimport $ from 'jquery';\r\nfunction randomQuote() {\r\n$.ajax({\r\n      url: \"https://api.forismatic.com/api/1.0/?\",\r\n      dataType: \"jsonp\",\r\n      data: \"method=getQuote&format=jsonp&lang=en&jsonp=?\",\r\n      success: function( response ) {\r\n        $(\"#random_quote\").html(\"<p id='random_quote' className='lead text-center'>\" +\r\n          response.quoteText + \"<br/>&dash; \" + response.quoteAuthor + \" &dash;</p>\");\r\n        $(\"#tweet\").attr(\"href\", \"https://twitter.com/home/?status=\" + response.quoteText +\r\n          ' (' + response.quoteAuthor + ')');\r\n      }\r\n  });\r\n}\r\n$(document).ready(function(){\r\n  $(\"button\").click(function(){\r\n  randomQuote();\r\n});\r\n});\r\n\r\nclass Quote extends React.Component{\r\n\r\nrender(){\r\n\r\n\treturn(\r\n\t\t\r\n\t\t<div>\r\n      \r\n<nav className=\"dt w-100 border-box pa3 ph5-ns\">\r\n  <a className=\"dtc v-mid mid-gray link dim w-25\"  title=\"Home\">\r\n\r\n    <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n        <div className=\"Tilt-inner pa3\">\r\n    <img style={{paddingTop: '5px'}} src={Logo} className=\" br-100\" alt=\"Logo\"/>\r\n    <h3 className=\"f1\" >iMot</h3>\r\n        </div>\r\n      </Tilt>\r\n\r\n\r\n  </a>\r\n  <div className=\"dtc v-mid w-75 tr\">\r\n    <a className=\"link dim moon-gray f6 f5-ns dib mr3 mr4-ns\" title=\"About\">Made with ❤️</a>\r\n    <a className=\"link dim moon-gray f6 f5-ns dib\" href=\"https://www.instagram.com/vivekanand_bangar/\" title=\"Contact\">Follow Me</a>\r\n  </div>\r\n</nav>\r\n\r\n  <article className=\"h-100 center mw5 mw6-ns br3 bw3 bg-black hidden ba b--white-70 mv4\">\r\n      <Tilt className=\"Tilt br2 shadow-2\" >\r\n\r\n      <h1 className=\"f4 bg-silver br3 br--top black-60 mv0 pv2 ph3\">Quote</h1>\r\n      <div className=\"pa3 bt b--black-10 \">\r\n\r\n        <p className=\"f6 f5-ns lh-copy measure near-white\"  id='random_quote'>Click the button to get motivated..</p>\r\n      </div>\r\n        </Tilt>\r\n  </article>\r\n\r\n\r\n<section className=\"mw5 mw7-ns center pa3 ph5-ns\">\r\n  <p className=\"lh-copy measure\">\r\n    <button className=\"grow ml7 dim br-pill ph3 pv2 mb2 dib bg-near-white pointer\">Get Quote</button>\r\n  </p>\r\n</section>\r\n\r\n          \r\n  \r\n    \r\n</div>\r\n\r\n  \r\n\t\t\r\n\t\t);\r\n\t}\r\n\r\n\r\n\r\n}\r\nexport default Quote;\r\n\r\n","import React, { Component } from 'react';\nimport './quote/Quote.css';\nimport Quote from './quote/Quote.js';\nimport Particles from 'react-particles-js';\nimport './App.css';\n\n\nconst particlesOptions = {\n  \"particles\": {\n          \"number\": {\n              \"value\": 1100,\n              \"density\": {\n                  \"enable\": false\n              }\n          },\n          \"size\": {\n              \"value\": 3,\n              \"random\": true,\n              \"anim\": {\n                  \"speed\": 4,\n                  \"size_min\": 0.3\n              }\n          },\n          \"line_linked\": {\n              \"enable\": false\n          },\n          \"move\": {\n              \"random\": true,\n              \"speed\": 1,\n              \"direction\": \"top\",\n              \"out_mode\": \"out\"\n          }\n      },\n      \"interactivity\": {\n          \"events\": {\n              \"onhover\": {\n                  \"enable\": true,\n                  \"mode\": \"bubble\"\n              },\n              \"onclick\": {\n                  \"enable\": true,\n                  \"mode\": \"repulse\"\n              }\n          },\n          \"modes\": {\n              \"bubble\": {\n                  \"distance\": 250,\n                  \"duration\": 2,\n                  \"size\": 0,\n                  \"opacity\": 0\n              },\n              \"repulse\": {\n                  \"distance\": 400,\n                  \"duration\": 4\n              }\n          }\n      }\n}\n\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n\n  \n      {/*<Particles className='particles'\n             params={particlesOptions}/>    */}\n             <Particles className='particles'\n             params={particlesOptions}/>\n      <Quote/>\n\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}